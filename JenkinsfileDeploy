#!groovy
import groovy.json.JsonSlurperClassic
node {

    def BUILD_NUMBER=env.BUILD_NUMBER
    def RUN_ARTIFACT_DIR="tests/${BUILD_NUMBER}"
    def SFDC_USERNAME

    def HUB_ORG=env.HUB_ORG_DH
    def SFDC_HOST = env.SFDC_HOST_DH
    def JWT_KEY_CRED_ID = env.JWT_CRED_ID_DH
    def CONNECTED_APP_CONSUMER_KEY=env.CONNECTED_APP_CONSUMER_KEY_DH

    def toolbelt = "/usr/local/bin/"
    
    print toolbelt
    print HUB_ORG
    print SFDC_HOST
    print JWT_KEY_CRED_ID
    print CONNECTED_APP_CONSUMER_KEY
    
    

    stage('checkout source') {
        // when running in multi-branch job, one must issue this command
        checkout scm
    }

    withCredentials([file(credentialsId: JWT_KEY_CRED_ID, variable: 'jwt_key_file')]) {
        stage('Connect to Devhub') {

            rc = sh returnStatus: true, script: "/usr/local/bin/sfdx force:auth:jwt:grant --clientid ${CONNECTED_APP_CONSUMER_KEY} --username ${HUB_ORG} --jwtkeyfile ${jwt_key_file} --setdefaultdevhubusername"
            if (rc != 0) { error 'hub org authorization failed' }

            // need to pull out assigned username
         ////   rmsg = sh returnStdout: true, script: "${toolbelt}/sfdx force:org:create --definitionfile config/project-scratch-def.json --json --setdefaultusername"
         //   printf rmsg
         //   mdpSo = sh returnStatus: true, script: "${toolbelt}/sfdx force:user:password:generate -u TempUnmanaged"
         //   print mdpSo
          //  def jsonSlurper = new JsonSlurperClassic()
           // def robj = jsonSlurper.parseText(rmsg)
          //  if (robj.status != 0) { error 'org creation failed: ' + robj.message }
          //  SFDC_USERNAME=robj.result.username
          //  robj = null

        }
///var/lib/jenkins/workspace/TryDeployDatahub/force-app
        // sfdx force:package:create -n GIFter -d "Using GIPHY to find GIFs and post to Chatter" -r force-app -t Unlocked -v DevHub
        stage('Create Package') {
        rc = sh returnStatus: true, script: "${toolbelt}sfdx force:package:create -n Package -d "Using GIPHY to find GIFs and post to Chatter" -r force-app -t Unlocked -v DevHub"
             sleep(60)
        }
        
        
        
        stage('Convert Metadata') {
        rc = sh returnStatus: true, script: "${toolbelt}sfdx force:source:convert -r force-app -d force-app -n 'Package'"
             sleep(60)
        }
       
        stage('Push To Org') {
            rc = sh returnStatus: true, script: "${toolbelt}sfdx force:mdapi:deploy --targetusername badbaxxjenkins@test.com --deploydir /var/lib/jenkins/workspace/TryDeployDatahub/force-app"
            if (rc != 0) {
                error 'push failed'
            }
            sleep(300)
            
            // assign permset
            rc = sh returnStatus: true, script: "${toolbelt}sfdx force:user:permset:assign --targetusername badbaxxjenkins@test.com --permsetname DreamHouse"
            if (rc != 0) {
                error 'permset:assign failed'
            }
        }

        stage('Run Apex Test') {
            sh "mkdir -p ${RUN_ARTIFACT_DIR}"
            timeout(time: 120, unit: 'SECONDS') {
                rc = sh returnStatus: true, script: "${toolbelt}/sfdx force:apex:test:run --testlevel RunLocalTests --outputdir ${RUN_ARTIFACT_DIR} --resultformat tap --targetusername ${SFDC_USERNAME}"
                if (rc != 0) {
                    error 'apex test run failed'
                }
            }
        }

        stage('collect results') {
            junit keepLongStdio: true, testResults: 'tests/**/*-junit.xml'
        }
    }
}
